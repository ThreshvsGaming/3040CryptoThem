openapi: 3.0.3
info:
  version: '1.0'
  title: 3040Crypto API
  description: Our 3040Crypto API will provide a seamless and convenient platform to our partners and clients to access up-to-date cryptocurrency market information.
externalDocs:
  description: Github Documentation here
  url: https://github.com/ThreshvsGaming/3040CryptoThem
servers:
  - url: https://www.3040Crypto.They.Them/api/v1/
    description: Production server
    
tags:
  - name: Market
    description: Everything about 3040Crypto's Market Data
  - name: Orders
    description: Everything about Orders

paths:
  /market/transactions/{type}:
    get:
      tags:
        - Market
      summary: Views the transaction history.
      description: Views the transaction history of crypto coins in 3040Crypto's Market.
      operationId: transaction
      parameters:
        - name: type
          in: path
          description: The type of transaction that the user is searching.
          required: true
          schema:
            type: string
            default: 'ALL'
            enum:
              - 'ALL'
              - 'BUY'
              - 'SELL'
        - name: coinSymbol
          in: query
          description: The symbol of the coin that the user is searching.
          schema:
            type: string
            default: ALL
        - name: size
          in: query
          description: The amount of transactions that the user wants to access.
          schema:
            type: integer
            format: int64
            default: ALL
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketData'
        '400':
          description: 'Bad Request: Invalid syntax'
        '404':
          description: 'Not found: Server could not find desired transactions'
  /orders/submit/{type}/{coinSymbol}:
    put:
      tags:
        - Orders
      summary: Submits an order.
      description: Submits an order into 3040Crypto's Market.
      operationId: submit
      parameters:
        - name: type
          in: path
          description: The type of transaction that the order is submitting.
          required: true
          schema:
            type: string
            default: 'BUY'
            enum:
              - 'BUY'
              - 'SELL'
        - name: coinSymbol
          in: path
          description: The symbol of the coin that the order is submitting.
          required: true
          example: 'BTC'
          schema:
            type: string
        - name: amount
          in: query
          description: The amount of crypto that the order is submitting.
          schema:
            type: number
            format: float
            default: 0
        - name: price
          in: query
          description: The price per amount that the order is submitting. Prices will be rounded by two decimals.
          schema:
            type: number
            format: float
            default: 0
      responses:
        '200':
          description: 'Sucessful operation'
        '400':
          description: 'Bad Request: Invalid syntax'
  /orders/cancel/{orderId}:
    delete:
      tags:
        - Orders
      summary: Cancels an order.
      description: Cancels a specific existing order using the order's id.
      operationId: cancel
      parameters:
        - name: orderId
          in: path
          description: id of the order.
          required: true
          schema:
            type: integer
            format: int64
          example: '362321'
      responses:
        '200':
          description: 'Sucessful operation'
        '400':
          description: 'Bad Request: Invalid order id value'
        '404':
          description: 'Not Found: Server could not find order id'
          
components:
  schemas:
    MarketData:
      type: object
      properties:
        order:
          type: object
          properties:
            date:
              type: string
              description: The date the order was created
              example: '2024-11-13 00:38:32'
            type:
              type: string
              description: The type of transaction
              example: 'BUY'
              enum:
                - 'BUY'
                - 'SELL'
            orderId:
              type: integer
              format: int64
              description: A unique id for the order
              example: 362321
            coinSymbol:
              type: string
              description: The symbol of the cypto currency
              example: 'BTC'
            amount:
              type: number
              format: float
              description: The amount of crypto coins
              example: 0.00400000
            status:
              type: string
              description: Needs a description
              example: success
            price:
              type: number
              format: float
              description: The price per amount
              example: 32462.52

